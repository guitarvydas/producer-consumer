* intro
  Simple producer-consumer pipeline built in V0 of state language.
* build
#+name: dsl
#+begin_src lisp :results output
 (uiop:run-program "rm -rf ~/.cache/common-lisp ;
 rm -rf ~/quicklisp/local-projects/*.fasl ;
 rm -rf ~/quicklisp/local/projects/*~")
 (ql:quickload :producer-consumer/generate-intermediate)
#+end_src

#+name: dsl
#+begin_src lisp :results output
  #| generates producer-consumer-intermediate.lisp
     which needs to be passed through expr-dsl to resolve expressions
     which results in final producer-consumer.lisp |#
 (producer-consumer::generate-intermediate)
#+end_src

* development
#+name: dsl
#+begin_src lisp :results output
 (uiop:run-program "rm -rf ~/.cache/common-lisp ;
 rm -rf ~/quicklisp/local-projects/*.fasl ;
 rm -rf ~/quicklisp/local/projects/*~")
#+end_src

#+name: dsl
#+begin_src lisp :results output
  (assert nil)
#+end_src







#+RESULTS: dsl
: To load "producer-consumer/generate-intermediate":
:   Load 1 ASDF system:
:     producer-consumer/generate-intermediate
: ; Loading "producer-consumer/generate-intermediate"
: [package producer-consumer]

